# Task Management API

This project is a simple Task Management API built with Node.js, Express, and MongoDB. It allows users to create, retrieve, update, and delete tasks. Each task contains a title, description, and status (`pending`, `in-progress`, or `completed`).

## Features

- Create, retrieve, update, and delete tasks

## Prerequisites

1. [Node.js](https://nodejs.org/) (v14 or higher)
2. [MongoDB](https://www.mongodb.com/)

## Installation

1. **Clone the Repository:**
   bash
   git clone https://github.com/Taranveersingh1/bytiv.assignment.git

2. **Install Dependencies:**
   bash
   npm install

3. **Set up MongoDB:**

   - Ensure MongoDB is running locally or update the connection string in `index.js`.

4. **Start the Server:**
   bash
   npm start

   The server will start on `http://localhost:8000`.

## Endpoints

### Base URL: `/tasks`

1. **Create a Task**

   - `POST /`
   - Request body:
     ```json
     { "title": "Task Title", "description": "Task Description" }
     ```

2. **Get All Tasks**

   - `GET /`

3. **Get Task by ID**

   - `GET /:id`

4. **Update Task Status**

   - `PUT /:id`
   - Request body:
     ```json
     { "status": "in-progress" }
     ```

5. **Delete a Task**
   - `DELETE /:id`

## Example Usage

1. Start the server:
   ```bash
   npm start
   ```

2.Example Usage with Postman

Create a Task:
Method: POST
URL: http://localhost:8000/tasks
Body (JSON):
{ "title": "Example Task", "description": "An example task." }

Get All Tasks:
Method: GET
URL: http://localhost:8000/tasks

Get Task by ID:
Method: GET
URL: http://localhost:8000/tasks/<task-id>

Update Task Status:
Method: PUT
URL: http://localhost:8000/tasks/<task-id>
Body (JSON):
{ "status": "completed" }

Delete a Task:
Method: DELETE
URL: http://localhost:8000/tasks/<task-id>

## Notes

- Ensure MongoDB is running before starting the server.
- Replace `<task-id>` with the actual ID of the task when making requests.
- The `status` field can only be `pending`, `in-progress`, or `completed`.

## Troubleshooting

1. **MongoDB connection error:** Ensure MongoDB is running or update the connection string in `index.js`.
2. **Invalid Task ID format:** The Task ID must be a valid MongoDB ObjectId.
